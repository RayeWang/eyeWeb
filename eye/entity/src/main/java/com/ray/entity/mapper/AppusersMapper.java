package com.ray.entity.mapper;

import com.ray.entity.Appusers;
import com.ray.entity.AppusersCriteria;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface AppusersMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @SelectProvider(type=AppusersSqlProvider.class, method="countByExample")
    int countByExample(AppusersCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @DeleteProvider(type=AppusersSqlProvider.class, method="deleteByExample")
    int deleteByExample(AppusersCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @Delete({
        "delete from appusers",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @Insert({
        "insert into appusers (id, openid, ",
        "AccessToken, ExpiresIn)",
        "values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, ",
        "#{accesstoken,jdbcType=VARCHAR}, #{expiresin,jdbcType=VARCHAR})"
    })
    int insert(Appusers record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @InsertProvider(type=AppusersSqlProvider.class, method="insertSelective")
    int insertSelective(Appusers record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @SelectProvider(type=AppusersSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="openid", property="openid", jdbcType=JdbcType.VARCHAR),
        @Result(column="AccessToken", property="accesstoken", jdbcType=JdbcType.VARCHAR),
        @Result(column="ExpiresIn", property="expiresin", jdbcType=JdbcType.VARCHAR)
    })
    List<Appusers> selectByExample(AppusersCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, openid, AccessToken, ExpiresIn",
        "from appusers",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="openid", property="openid", jdbcType=JdbcType.VARCHAR),
        @Result(column="AccessToken", property="accesstoken", jdbcType=JdbcType.VARCHAR),
        @Result(column="ExpiresIn", property="expiresin", jdbcType=JdbcType.VARCHAR)
    })
    Appusers selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AppusersSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Appusers record, @Param("example") AppusersCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AppusersSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Appusers record, @Param("example") AppusersCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AppusersSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Appusers record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appusers
     *
     * @mbggenerated
     */
    @Update({
        "update appusers",
        "set openid = #{openid,jdbcType=VARCHAR},",
          "AccessToken = #{accesstoken,jdbcType=VARCHAR},",
          "ExpiresIn = #{expiresin,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Appusers record);
    
    @SelectProvider(type=DynamicSql.class,method="getSql")
    void insertByDynamic(Appusers appusers);
}
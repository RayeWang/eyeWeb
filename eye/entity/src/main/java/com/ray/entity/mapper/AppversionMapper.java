package com.ray.entity.mapper;

import com.ray.entity.Appversion;
import com.ray.entity.AppversionCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface AppversionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @SelectProvider(type=AppversionSqlProvider.class, method="countByExample")
    int countByExample(AppversionCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @DeleteProvider(type=AppversionSqlProvider.class, method="deleteByExample")
    int deleteByExample(AppversionCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @Delete({
        "delete from appversion",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @Insert({
        "insert into appversion (id, version, ",
        "url, des, size, ",
        "versionName, nametype)",
        "values (#{id,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, ",
        "#{url,jdbcType=VARCHAR}, #{des,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR}, ",
        "#{versionname,jdbcType=VARCHAR}, #{nametype,jdbcType=INTEGER})"
    })
    int insert(Appversion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @InsertProvider(type=AppversionSqlProvider.class, method="insertSelective")
    int insertSelective(Appversion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @SelectProvider(type=AppversionSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="version", property="version", jdbcType=JdbcType.INTEGER),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="des", property="des", jdbcType=JdbcType.VARCHAR),
        @Result(column="size", property="size", jdbcType=JdbcType.VARCHAR),
        @Result(column="versionName", property="versionname", jdbcType=JdbcType.VARCHAR),
        @Result(column="nametype", property="nametype", jdbcType=JdbcType.INTEGER)
    })
    List<Appversion> selectByExample(AppversionCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, version, url, des, size, versionName, nametype",
        "from appversion",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="version", property="version", jdbcType=JdbcType.INTEGER),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="des", property="des", jdbcType=JdbcType.VARCHAR),
        @Result(column="size", property="size", jdbcType=JdbcType.VARCHAR),
        @Result(column="versionName", property="versionname", jdbcType=JdbcType.VARCHAR),
        @Result(column="nametype", property="nametype", jdbcType=JdbcType.INTEGER)
    })
    Appversion selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AppversionSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Appversion record, @Param("example") AppversionCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AppversionSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Appversion record, @Param("example") AppversionCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AppversionSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Appversion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appversion
     *
     * @mbggenerated
     */
    @Update({
        "update appversion",
        "set version = #{version,jdbcType=INTEGER},",
          "url = #{url,jdbcType=VARCHAR},",
          "des = #{des,jdbcType=VARCHAR},",
          "size = #{size,jdbcType=VARCHAR},",
          "versionName = #{versionname,jdbcType=VARCHAR},",
          "nametype = #{nametype,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Appversion record);
}